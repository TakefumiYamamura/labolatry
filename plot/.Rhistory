xij <- array(0, dim=c(k))
xij_2 <- array(0, dim=c(k))
for (i in 1:k) {
sum <- 0
sum_2 <- 0
for (j in 1:n) {
sum <- sum +  mydata[j,i]
sum_2 <- sum_2 +  mydata[j,i]*mydata[j,i]
}
xij[i] <- sum
xij_2[i] <- sum_2
}
C <- sum(xij)*sum(xij)/N
TSS <- 0
for (i in k) {
TSS <- TSS +xij_2[i]
}
TSS = TSS - C
GSS <- 0
for (i in k) {
GSS <- GSS + xij[i]*xij[i]/n
}
GSS <- GSS - C
ESS <- 0
for (i in k) {
ESS <- ESS + xij_2[i]/n
}
ESS <- ESS - C -GSS
gMS <- GSS/groups_DF
eMS <- ESS/error_DF
F <- gMS/eMS
ESS
GSS
TSS
xij
xij_2
sum(xij_2)
C
na <- 0
n <- 6
k <- 5
N <- n*k-na
total_DF <- N - 1
groups_DF <- k-1
error_DF <- N-k
mydata <- matrix(c(
28.2, 39.6, 46.3, 41.0, 56.3,
33.2, 40.8, 42.1, 44.1, 54.1,
36.4, 37.9, 43.5, 46.4, 59.4,
34.6, 37.1, 48.8, 40.2, 62.7,
29.1, 43.6, 43.7, 38.6, 60.0,
31.0, 42.4, 40.1, 36.3, 57.3), ncol=5, nrow=6, byrow=T)
xij <- array(0, dim=c(k))
xij_2 <- array(0, dim=c(k))
for (i in 1:k) {
sum <- 0
sum_2 <- 0
for (j in 1:n) {
sum <- sum +  mydata[j,i]
sum_2 <- sum_2 +  mydata[j,i]*mydata[j,i]
}
xij[i] <- sum
xij_2[i] <- sum_2
}
C <- sum(xij)*sum(xij)/N
TSS <- sum(xij_2) - C
GSS <- 0
for (i in k) {
GSS <- GSS + xij[i]*xij[i]/n
}
GSS <- GSS - C
ESS <- 0
for (i in k) {
ESS <- ESS + xij_2[i]/n
}
ESS <- ESS - C -GSS
gMS <- GSS/groups_DF
eMS <- ESS/error_DF
F <- gMS/eMS
ESS
GSS
TSS
for (i in k) {
TSS <- TSS +xij_2[i]
}
TSS
x <- 0
x <- 2
x <- x +2
x
x <- x +2
x
xij
sum(xij)
for(i in k){
x <- x + xij[i]
}
x
l
k
xij[1]
xij[2]
xij[3]
xij[4]
xij[5]
for(i in k){
x = x + xij[i]
}
x
x
xij
na <- 0
n <- 6
k <- 5
N <- n*k-na
total_DF <- N - 1
groups_DF <- k-1
error_DF <- N-k
mydata <- matrix(c(
28.2, 39.6, 46.3, 41.0, 56.3,
33.2, 40.8, 42.1, 44.1, 54.1,
36.4, 37.9, 43.5, 46.4, 59.4,
34.6, 37.1, 48.8, 40.2, 62.7,
29.1, 43.6, 43.7, 38.6, 60.0,
31.0, 42.4, 40.1, 36.3, 57.3), ncol=5, nrow=6, byrow=T)
xij <- array(0, dim=c(k))
xij_2 <- array(0, dim=c(k))
for (i in 1:k) {
sum <- 0
sum_2 <- 0
for (j in 1:n) {
sum <- sum +  mydata[j,i]
sum_2 <- sum_2 +  mydata[j,i]*mydata[j,i]
}
xij[i] <- sum
xij_2[i] <- sum_2
}
C <- sum(xij)*sum(xij)/N
TSS <- sum(xij_2) - C
GSS <- 0
for (i in 1:k) {
GSS <- GSS + xij[i]*xij[i]/n
}
GSS <- GSS - C
ESS <- 0
for (i in 1:k) {
ESS <- ESS + xij_2[i]/n
}
ESS <- ESS - C -GSS
gMS <- GSS/groups_DF
eMS <- ESS/error_DF
F <- gMS/eMS
GSS
ESS
TSS
na <- 0
n <- 6
k <- 5
N <- n*k-na
total_DF <- N - 1
groups_DF <- k-1
error_DF <- N-k
mydata <- matrix(c(
28.2, 39.6, 46.3, 41.0, 56.3,
33.2, 40.8, 42.1, 44.1, 54.1,
36.4, 37.9, 43.5, 46.4, 59.4,
34.6, 37.1, 48.8, 40.2, 62.7,
29.1, 43.6, 43.7, 38.6, 60.0,
31.0, 42.4, 40.1, 36.3, 57.3), ncol=5, nrow=6, byrow=T)
xij <- array(0, dim=c(k))
xij_2 <- array(0, dim=c(k))
for (i in 1:k) {
sum <- 0
sum_2 <- 0
for (j in 1:n) {
sum <- sum +  mydata[j,i]
sum_2 <- sum_2 +  mydata[j,i]*mydata[j,i]
}
xij[i] <- sum
xij_2[i] <- sum_2
}
C <- sum(xij)*sum(xij)/N
TSS <- sum(xij_2) - C
GSS <- 0
for (i in 1:k) {
GSS <- GSS + xij[i]*xij[i]/n
}
GSS <- GSS - C
ESS <- TSS -GSS
gMS <- GSS/groups_DF
eMS <- ESS/error_DF
F <- gMS/eMS
GSS
ESS
F
mydata <- matrix(c(
28.7, 39.6, 46.3, 41.0, 56.3,
33.7, 40.8, 47.1, 44.1, 54.1,
36.4, 37.9, 43.5, 46.4, 59.4,
34.6, 37.1, 48.8, 40.7, 67.7,
79.1, 43.6, 43.7, 38.6, 60.0,
31.0, 47.4, 40.1, 36.3, 57.3,
28.7, 39.6, 46.3, 41.0, 56.3,
33.7, 40.8, 47.1, 44.1, 54.1,
36.4, 37.9, 43.5, 46.4, 59.4,
34.6, 37.1, 48.8, 40.7, 67.7,
79.1, 43.6, 43.7, 38.6, 60.0,
31.0, 47.4, 40.1, 36.3, 57.3), ncol=10, nrow=6, byrow=T)
newdata <- data.frame(stron=as.vector(mydata), lake=as.factor(col(mydata)))
summary(aov(stron ~ lake, newdata))
result <- aov(stron ~ lake, newdata)
TukeyHSD(result)
calcium <- martix(c(16.5, 18.4, 12.7, 14.0, 12.8,
14.5, 11.0, 10.8, 14.3, 10.0,
39.1, 26.2, 21.3, 35.8, 40.2,
32.0, 23.8, 28.8, 25.0, 29.3),
nrow=5, ncol=4)
hormone <- c(rep(1,10), rep(2,10))
sex <- c(rep(1,5), rep(2,5), rep(1,5), rep(2,5))
calcium <- matrix(c(16.5, 18.4, 12.7, 14.0, 12.8,
14.5, 11.0, 10.8, 14.3, 10.0,
39.1, 26.2, 21.3, 35.8, 40.2,
32.0, 23.8, 28.8, 25.0, 29.3),
nrow=5, ncol=4)
hormone <- c(rep(1,10), rep(2,10))
sex <- c(rep(1,5), rep(2,5), rep(1,5), rep(2,5))
hormone
sex
calcium
newdata <- data.frame(hrm = as.factor(hormone), sx = as.factor(sex), scores = as.vector(calcium))
newdata
calcium <- matrix(c(16.5, 18.4, 12.7, 14.0, 12.8,
14.5, 11.0, 10.8, 14.3, 10.0,
39.1, 26.2, 21.3, 35.8, 40.2,
32.0, 23.8, 28.8, 25.0, 29.3),
nrow=5, ncol=4)
hormone <- c(rep(1,10), rep(2,10))
sex <- c(rep(1,5), rep(2,5), rep(1,5), rep(2,5))
newdata <- data.frame(hrm = as.factor(hormone), sx = as.factor(sex), scores = as.vector(calcium))
summary(aov(scores ~ sx + hrm+ sx*hrm, data = newdata))
newdata
height <- c(29.7, 31.8, 34.1, 31.6, 29.0, 29.6, 30.4, 27.4, 29.2, 32.5, 30.9, 28.5, 26.4, 28.0,
32.2, 34.1, 37.0, 34.9, 32.3, 33.1, 32.4, 22.8, 25.6, 24.5, 23.4, 22.7, 22.1, 22.9)
soil <- c(rep(1, 14), rep(2, 14))
sehi <- c(rep(1, 7), rep(2, 7), rep(1, 7), rep(2, 7))
newdata <- data.frame(sehi = as.factor(sehi), soil = as.factor(soil), scores = as.vector(height))
summary(aov(scores ~ soil + sehi + soil * sehi, data = newdata))
height <- c(29.7, 31.8, 34.1, 31.6, 29.0, 29.6, 30.4, 27.4, 29.2, 32.5, 30.9, 28.5, 26.4, 28.0,
32.2, 34.1, 37.0, 34.9, 32.3, 33.1, 32.4, 22.8, 25.6, 24.5, 23.4, 22.7, 22.1, 22.9)
soil <- c(rep(1, 14), rep(2, 14))
sehi <- c(rep(1, 7), rep(2, 7), rep(1, 7), rep(2, 7))
newdata <- data.frame(sehi = as.factor(sehi), soil = as.factor(soil), scores = as.vector(height))
summary(aov(scores ~ soil + sehi + soil * sehi, data = newdata))
soil.nat <- c(mean(newdata$scores[1:7]), mean(newdata$scores[8:14]))
soil.art <- c(mean(newdata$scores[15:21]), mean(newdata$scores[22:28]))
plot(soil.nat, xaxt = "n", ylim = c(20,35), type="b", xlab="Sehi", ylab= "meanvalue", pch=1)
par(new=T)
plot(soil.art, xaxt = "n", ylim = c(20,35), type="b", xlab="", ylab="", pch=2)
axis(side=1, at=1:2)
plot(soil.art, xaxt = "n", ylim = c(20,35), type="b", xlab="", ylab="", pch=2)
plot(soil.nat, xaxt = "n", ylim = c(20,35), type="b", xlab="Sehi", ylab= "meanvalue", pch=1)
calcium <- matrix(c(16.5, 18.4, 12.7, 14.0, 12.8,
14.5, 11.0, 10.8, 14.3, 10.0,
39.1, 26.2, 21.3, 35.8, 40.2,
32.0, 23.8, 28.8, 25.0, 29.3),
nrow=5, ncol=4)
hormone <- c(rep(1,10), rep(2,10))
sex <- c(rep(1,5), rep(2,5), rep(1,5), rep(2,5))
newdata <- data.frame(hrm = as.factor(hormone), sx = as.factor(sex), scores = as.vector(calcium))
summary(aov(scores ~ sx + hrm+ sx*hrm, data = newdata))
height <- c(29.7, 31.8, 34.1, 31.6, 29.0, 29.6, 30.4, 27.4, 29.2, 32.5, 30.9, 28.5, 26.4, 28.0,
32.2, 34.1, 37.0, 34.9, 32.3, 33.1, 32.4, 22.8, 25.6, 24.5, 23.4, 22.7, 22.1, 22.9)
soil <- c(rep(1, 14), rep(2, 14))
sehi <- c(rep(1, 7), rep(2, 7), rep(1, 7), rep(2, 7))
newdata <- data.frame(sehi = as.factor(sehi), soil = as.factor(soil), scores = as.vector(height))
summary(aov(scores ~ soil + sehi + soil * sehi, data = newdata))
soil.nat <- c(mean(newdata$scores[1:7]), mean(newdata$scores[8:14]))
soil.art <- c(mean(newdata$scores[15:21]), mean(newdata$scores[22:28]))
plot(soil.nat, xaxt = "n", ylim = c(20,35), type="b", xlab="Sehi", ylab= "meanvalue", pch=1)
par(new=T)
plot(soil.art, xaxt = "n", ylim = c(20,35), type="b", xlab="", ylab="", pch=2)
axis(side=1, at=1:2)
wing <- c(10.4, 10.8, 11.1, 10.2, 10.3, 10.2, 10.7, 10.5, 10.8, 11.2, 10.6, 11.4)
tail <- c(7.4, 7.6, 7.9, 7.2, 7.4, 7.1, 7.4, 7.2, 7.8, 7.7, 7.8, 8.3)
summary(lm(wing ~ tail))
cor.test(wing, tail)
r <- cor(wing, tail)
n <- 12
t <- r*sqrt((n-2)/(1-r^2))
df <- n-2
prob <-2*pt(t,df, lower=F)
c("t" = t, "d.f."=df, "P value" = prob)
age <- c(3.0, 4.0, 5.0, 6.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 15.0, 16.0, 17.0)
wing <- c(1.4, 1.5, 2.2, 2.4, 3.1, 3.2, 3.2, 3.9, 4.1, 4.7, 4.5, 5.2, 5.0)
result1 <- lm(wing ~ age)
summary(result1)
mydata <- data.frame(wing = as.vector(wing), age = as.vector(age))
summary(aov(wing ~ age, data = mydata))
X11()
result1.plot <- predict(result1, interval = "confidence")
matplot(age, result1.plot, xlab="age(days)", ylab = "wing length (mm)", type = "1")
age <- c(3.0, 4.0, 5.0, 6.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 15.0, 16.0, 17.0)
wing <- c(1.4, 1.5, 2.2, 2.4, 3.1, 3.2, 3.2, 3.9, 4.1, 4.7, 4.5, 5.2, 5.0)
result1 <- lm(wing ~ age)
summary(result1)
mydata <- data.frame(wing = as.vector(wing), age = as.vector(age))
summary(aov(wing ~ age, data = mydata))
X11()
result1_plot <- predict(result1, interval = "confidence")
matplot(age, result1_plot, xlab="age(days)", ylab = "wing length (mm)", type = "1")
age <- c(3.0, 4.0, 5.0, 6.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 15.0, 16.0, 17.0)
wing <- c(1.4, 1.5, 2.2, 2.4, 3.1, 3.2, 3.2, 3.9, 4.1, 4.7, 4.5, 5.2, 5.0)
result1 <- lm(wing ~ age)
summary(result1)
mydata <- data.frame(wing = as.vector(wing), age = as.vector(age))
summary(aov(wing ~ age, data = mydata))
# X11()
result1_plot <- predict(result1, interval = "confidence")
matplot(age, result1_plot, xlab="age(days)", ylab = "wing length (mm)", type = "l")
lsd <- c(6,7,4,2,10,1,3,8,6)
question <- c(6,11,6,0,13,2,1,9,9)
cor.test(lsd, question)
result <- lm(question ~ lsd)
result.plot <- predict(result, interval = "confidence")
matplot(lsd, result.plot, xlab="lsd", ylab = "question", type = "l")
lsd <- c(6,7,4,2,10,1,3,8,6)
question <- c(6,11,6,0,13,2,1,9,9)
cor.test(lsd, question)
result <- lm(question ~ lsd)
result.plot <- predict(result, interval = "confidence")
matplot(lsd, result.plot, xlab="lsd", ylab = "question", type = "l")
wing <- c(10.4, 10.8, 11.1, 10.2, 10.3, 10.2, 10.7, 10.5, 10.8, 11.2, 10.6, 11.4)
tail <- c(7.4, 7.6, 7.9, 7.2, 7.4, 7.1, 7.4, 7.2, 7.8, 7.7, 7.8, 8.3)
summary(lm(wing ~ tail))
cor.test(wing, tail)
r <- cor(wing, tail)
n <- 12
t <- r*sqrt((n-2)/(1-r^2))
df <- n-2
prob <-2*pt(t,df, lower=F)
c("t" = t, "d.f."=df, "P value" = prob)
wing <- c(10.4, 10.8, 11.1, 10.2, 10.3, 10.2, 10.7, 10.5, 10.8, 11.2, 10.6, 11.4)
tail <- c(7.4, 7.6, 7.9, 7.2, 7.4, 7.1, 7.4, 7.2, 7.8, 7.7, 7.8, 8.3)
summary(lm(wing ~ tail))
cor.test(wing, tail)
r <- cor(wing, tail)
n <- 12
t <- r*sqrt((n-2)/(1-r^2))
df <- n-2
prob <-2*pt(t,df, lower=F)
c("t" = t, "d.f."=df, "P value" = prob)
age <- c(3.0, 4.0, 5.0, 6.0, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 15.0, 16.0, 17.0)
wing <- c(1.4, 1.5, 2.2, 2.4, 3.1, 3.2, 3.2, 3.9, 4.1, 4.7, 4.5, 5.2, 5.0)
result1 <- lm(wing ~ age)
summary(result1)
mydata <- data.frame(wing = as.vector(wing), age = as.vector(age))
summary(aov(wing ~ age, data = mydata))
# X11()
result1_plot <- predict(result1, interval = "confidence")
matplot(age, result1_plot, xlab="age(days)", ylab = "wing length (mm)", type = "l")
parentes <- c(1,2,4,5,3,2,3,1,5,4,4,2)
chid <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(age~parents)
summary(result)
parentes <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
parentes <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
result_plot <- predict(result1, interval = "confidence")
matplot(parents, result_plot, xlab="両親の結婚年数", ylab = "被験者の結婚年数", type = "l")
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
result_plot <- predict(result, interval = "confidence")
matplot(parents, result_plot, xlab="両親の結婚年数", ylab = "被験者の結婚年数", type = "l")
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
result_plot <- predict(result, interval = "confidence")
matplot(parents, result_plot, xlab="duration of marriage in parents", ylab = "duration of marriage in children", type = "l")
result
result_plot
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
result_plot
order(result_plot$fit)
order(result_plot,fit)
order(result_plot)
result_plot
result_plot
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
result <- lm(children ~ parents)
summary(result)
result
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
mydata <- data.frame(parents = as.vector(parents), children = as.vector(children))
mydata
order(mydata$parents)
mydata[order(mydata$parents)]
mydata[order(mydata$parents),]
sorted_data <- mydata[order(mydata$parents),]
sorted_data
sorted_data$parents
parents <- c(1,2,4,5,3,2,3,1,5,4,4,2)
children <- c(3,4,4,5,5,3,4,3,6,6,5,5)
mydata <- data.frame(parents = as.vector(parents), children = as.vector(children))
sorted_data <- mydata[order(mydata$parents),]
result <- lm(sorted_data$children ~ sorted_data$parents)
summary(result)
result_plot <- predict(result, interval = "confidence")
matplot(sorted_data$parents, result_plot, xlab="duration of marriage in parents", ylab = "duration of marriage in children", type = "l")
make_name <- function(dir, i) {
source('~/labolatory/plot/make_table2.r')
make_name <- function(dir, i) {
name1 <- paste(dir,"/func", sep="")
name2 <- paste(name1, i, sep="")
name3 <- paste(name2,".csv", sep="")
return(name3)
}
dir_name <- c("csvs_length_shade_with_archive_D10","csvs_length_shade_wo_archive_D10","csvs_length_de_with_archive_D10","csvs_length_de_wo_archive_D10")
for (i in 1:15) {
name1 <- make_name(dir_name[1], i)
data1 <- read.csv(name1)
name2 <- make_name(dir_name[2], i)
data2 <- read.csv(name2)
generation_number <- 1:5998
average_distance_to_centroid <- data.frame(csvs_length_shade_with_archive_D10=data1[,1], csvs_length_shade_wo_archive_D10=data2[,1])
average_distance_to_centroid_log1 <- c()
for (j in data1[,1]) {
if (j > 0.000000001){
# print(j)
average_distance_to_centroid_log1 <- append(average_distance_to_centroid_log1,log10(as.numeric(j)))
} else {
average_distance_to_centroid_log1 <- append(average_distance_to_centroid_log1, 1 )
}
}
average_distance_to_centroid_log2 <- c()
for (j in data2[,1]) {
if (j > 0.000000001){
average_distance_to_centroid_log2 <- append(average_distance_to_centroid_log2,log10(as.numeric(j)))
} else {
average_distance_to_centroid_log2 <- append(average_distance_to_centroid_log2, 1 )
}
}
average_distance_to_centroid <- data.frame(csvs_length_shade_with_archive_D10=average_distance_to_centroid_log1, csvs_length_shade_wo_archive_D10=average_distance_to_centroid_log2)
# plot(x, data[,1],type='l' )
type <- c("shade_w/a","shade_wo/a")
cols <- c("red", "blue")
#legend("topleft", legend = type, lty = 1, col = cols)
matplot(generation_number, average_distance_to_centroid, type='l', col = cols)
}
for (i in 1:15) {
name1 <- make_name(dir_name[3], i)
data1 <- read.csv(name1)
name2 <- make_name(dir_name[4], i)
data2 <- read.csv(name2)
# d1 <- data1[,1]
# for (j in 1:length(d1)) {d1[j] <- log10(d1[j])}
# d12 <- data2[,1]
# for (j in 1:length(d2)) {d2[j] <- log10(d2[j])}
generation_number <- 1:1998
average_distance_to_centroid <- data.frame(csvs_length_shade_with_archive_D10=data1[,1], csvs_length_shade_wo_archive_D10=data2[,1])
average_distance_to_centroid_log1 <- c()
for (j in data1[,1]) {
# if (j > 0.000000001){
# print(j)
average_distance_to_centroid_log1 <- append(average_distance_to_centroid_log1,log10(as.numeric(j)))
# } else {
#   average_distance_to_centroid_log1 <- append(average_distance_to_centroid_log1, 1 )
# }
}
average_distance_to_centroid_log2 <- c()
for (j in data2[,1]) {
if (j > 0.000000001){
average_distance_to_centroid_log2 <- append(average_distance_to_centroid_log2,log10(as.numeric(j)))
} else {
average_distance_to_centroid_log2 <- append(average_distance_to_centroid_log2, 1 )
}
}
average_distance_to_centroid <- data.frame(csvs_length_shade_with_archive_D10=average_distance_to_centroid_log1, csvs_length_shade_wo_archive_D10=average_distance_to_centroid_log2)
# plot(x, data[,1],type='l' )
type <- c("shade_w/a","shade_wo/a")
cols <- c("red", "blue")
#legend("topleft", legend = type, lty = 1, col = cols)
matplot(generation_number, average_distance_to_centroid, type='l')
}
source('~/labolatory/plot/make_graph.r')
setwd("~/labolatory/plot")
for (i in 1:15) {
source('~/labolatory/plot/make_graph.r')
df
dfasd
fa
d
sgafga
